#!/bin/bash

if test "$#" -ne 2 -o "$1" == --help ; then
    echo "Usage: $(echo $0 | sed 's#.*/##g') <type> <package>

Creates a simple mutable holder class for the specified type."
    exit
fi

type=$1
package=$2

capitalizedType="$(echo $type | sed 's#^\(.\)\(.*\)$#\1#g' | tr '[:lower:]' '[:upper:]')$(echo $type | sed 's#^\(.\)\(.*\)$#\2#g')"
holderType="${capitalizedType}Holder"

echo \
"package ${package};

import javautils.Objects;
$(if test $package != javautils.holders ; then echo 'import javautils.holders.AbstractHolder;' ; fi)

/**
 * <p>A simple mutable holder for <code>${type}</code>-values. This class
 * is designed to be used in situations in which you need to store
 * ${type}s in collections or when you want to be able to mutate an
 * ${type} from an anonymous inner class, for example.</p>
 */
public class $holderType extends AbstractHolder {

  // Warning: This file was generated by the $(echo $0 | sed 's#.*/##g')
  // script. It is probably more productive to extend the script rather
  // than edit this code directly.

  /**
   * <p>Default constructor for convenience.</p>
   */
  public $holderType() {}

  /**
   * <p>A new holder with specified initial value.</p>
   */
  public $holderType(${type} value) {
    this.value = value;
  }

  /**
   * <p>Overrides the base method for efficiency.</p>
   */
  protected Object get() {
    return Objects.asObject(value);
  }

  /**
   * <p>The mutable value of this holder.</p>
   */
  public ${type} value;
}"
