#!/bin/bash

if test "$1" = --help ; then
    echo \
"Usage: $(echo $0 | sed 's#.*/##g')

Generates a HTML page that contains some simple line based metrics on the
project source code.

Requires project-info."
    exit
fi

source javautils-project-info
source grep-and-sed-functions

srcFiles="$(find $srcRoot -path '*.cup' -o -path '*.lex' -o -path '*.java' -a -not -path '*/detail/*')"
htmlFiles="$(find $srcRoot -path '*.html')"

testFilePat='\(.*Test\.java\)\|\(.*/contracts/.*\.Java\)\|\(.*/testapp/.*\.java\)'

emptyLinePat=$'^[ \t]*$'
specialLinePat=$'^[ \t]*\\([ \t{}(),;]\\|\\[\\|\\]\\)\\+[ \t]*$'
commentLinePat=$'^[ \t]*[/\\*]'
importLinePat=$'^[ \t]*import'

function countLines         { wc -l ; }
function countEmptyLines    { grep    -e "$emptyLinePat" | wc -l ; }
function countNonEmptyLines { grep -v -e "$emptyLinePat" | wc -l ; }
function countSpecialLines  { grep    -e "$specialLinePat" | wc -l ; }
function countCommentLines  { grep    -e "$commentLinePat" | wc -l ; }
function countImportLines   { grep    -e "$importLinePat" | wc -l ; }
function countNiNcNeLines   { grep -v -e "$commentLinePat" -e "$emptyLinePat" -e "$importLinePat" -e "$specialLinePat" | wc -l ; }

echo \
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">
<html>
<head><title>$capitalizedPrjName: Java code statistics</title></head>
<body>
<h1>$capitalizedPrjName: Java code statistics</h1>

<p>Total of</p>
<ul>
<li><b>$(cat $srcFiles $htmlFiles | countLines         )</b> commented source lines (including JavaDoc HTML files).</li>
</ul>

<p>Consisting of</p>
<ul>
<li><b>$(cat $srcFiles $htmlFiles | countEmptyLines    )</b> empty source lines (including JavaDoc HTML files),</li>
<li><b>$(cat           $htmlFiles | countNonEmptyLines )</b> non-empty JavaDoc HTML source lines,</li>
<li><b>$(cat $srcFiles            | countSpecialLines  )</b> source lines consisting only of characters '{', '}', '(', ')', ',' and ';',</li>
<li><b>$(cat $srcFiles $htmlFiles | countCommentLines  )</b> comment source lines,</li>
<li><b>$(cat $srcFiles            | countImportLines   )</b> import statement lines, and</li>
<li><b>$(cat $srcFiles            | countNiNcNeLines   )</b> non-import, non-commented, non-special, non-empty source lines.</li>
</ul>

<p>Of the non-import, non-commented, non-special, non-empty source lines</p>
<ul>
<li><b>$(cat $(grep-from "$srcFiles"    "$testFilePat") | countNiNcNeLines )</b> are test code (including unit tests, contract decorators, etc...), and</li>
<li><b>$(cat $(grep-from "$srcFiles" -v "$testFilePat") | countNiNcNeLines )</b> are other code.</li>
</ul>

<p>The source code spans</p>
<ul>
<li><b>$(echo "$srcFiles" $'\n' "$htmlFiles" | wc -l)</b> files, and</li>
<li><b>$(find $srcRoot -type d -path '*' -a -not -path '*/CVS' | wc -l)</b> directories.</li>
</ul>

<h2>Statistics for each Java source file</h2>

<table summary=\"Statistics for each Java source file\">
<tr><th>No-ISEC</th>  <th>Import</th> <th>Special</th>   <th>Empty</th> <th>Comment</th>   <th>Total</th> <th>File</th></tr>
$(for f in $srcFiles ; do
     echo "$(cat $f | countNiNcNeLines)</td> <td>$(cat $f | countImportLines)</td> <td>$(cat $f | countEmptyLines)</td> <td>$(cat $f | countSpecialLines)</td> <td>$(cat $f | countCommentLines)</td> <td>$(cat $f | countLines)</td> <td><tt>$(echo $f | sed "s#$srcRoot/##g")</tt>"
  done | sort -n -r | sed -e 's#\(.*\)#<tr><td>\1</td></tr>#g')
</table>
<hr>
These statistics were generated by the script <tt>$(sed-from "$0" -e 's#.*/##g')</tt> on $(date).
</body>
</html>"
